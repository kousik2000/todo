{"ast":null,"code":"var _jsxFileName = \"/home/theia/myapp/src/components/StopWatch/index.js\";\nimport \"./index.css\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass StopWatch extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isTimeRunning: false,\n      timeElapsedInSeconds: 0\n    };\n    this.updateTime = () => {\n      this.setState(prevState => ({\n        timeElapsedInSeconds: prevState.timeElapsedInSeconds + 1\n      }));\n    };\n    this.startTimer = () => {\n      this.timeInterval = setInterval(this.updateTime, 1000);\n      this.setState({\n        isTimeRunning: true\n      });\n    };\n    this.pauseTimer = () => {\n      clearInterval(this.timeInterval);\n      this.setState({\n        isTimerRunning: false\n      });\n    };\n    this.resetTimer = () => {\n      clearInterval(this.timeInterval);\n      this.setState({\n        isTimerRunning: false,\n        timeElapsedInSeconds: 0\n      });\n    };\n    this.renderSeconds = () => {\n      const {\n        timeElapsedInSeconds\n      } = this.state;\n      const seconds = Math.floor(timeElapsedInSeconds % 60);\n      if (seconds < 10) {\n        return `0${seconds}`;\n      }\n      return seconds;\n    };\n    this.renderMinutes = () => {\n      const {\n        timeElapsedInSeconds\n      } = this.state;\n      const minutes = Math.floor(timeElapsedInSeconds / 60);\n      if (minutes < 10) {\n        return `0${minutes}`;\n      }\n      return minutes;\n    };\n    this.renderHours = () => {\n      const {\n        timeElapsedInSeconds\n      } = this.state;\n      const minutes = Math.floor(timeElapsedInSeconds / 3600);\n      if (minutes < 10) {\n        return `0${minutes}`;\n      }\n      return minutes;\n    };\n    this.renderDays = () => {\n      const {\n        timeElapsedInSeconds\n      } = this.state;\n      const minutes = Math.floor(timeElapsedInSeconds / 86400);\n      if (minutes < 10) {\n        return `0${minutes}`;\n      }\n      return minutes;\n    };\n  }\n  render() {\n    const time = `${this.renderDays()}:${this.renderHours()}:${this.renderMinutes()}:${this.renderSeconds()}`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main-head\",\n        children: \"Stop Watch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"display-container\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"timer\",\n            children: time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: this.startTimer,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: this.pauseTimer,\n            children: \"Pause\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: this.resetTimer,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default StopWatch;","map":{"version":3,"names":["Component","StopWatch","state","isTimeRunning","timeElapsedInSeconds","updateTime","setState","prevState","startTimer","timeInterval","setInterval","pauseTimer","clearInterval","isTimerRunning","resetTimer","renderSeconds","seconds","Math","floor","renderMinutes","minutes","renderHours","renderDays","render","time"],"sources":["/home/theia/myapp/src/components/StopWatch/index.js"],"sourcesContent":["import \"./index.css\";\n\nimport { Component } from \"react\";\n\nclass StopWatch extends Component {\n  state = { isTimeRunning: false, timeElapsedInSeconds: 0 };\n\n  updateTime = () => {\n    this.setState((prevState) => ({\n      timeElapsedInSeconds: prevState.timeElapsedInSeconds + 1,\n    }));\n  };\n\n  startTimer = () => {\n    this.timeInterval = setInterval(this.updateTime, 1000);\n    this.setState({ isTimeRunning: true });\n  };\n\n  pauseTimer = () => {\n    clearInterval(this.timeInterval);\n    this.setState({ isTimerRunning: false });\n  };\n\n  resetTimer = () => {\n    clearInterval(this.timeInterval);\n    this.setState({ isTimerRunning: false, timeElapsedInSeconds: 0 });\n  };\n\n  renderSeconds = () => {\n    const { timeElapsedInSeconds } = this.state;\n    const seconds = Math.floor(timeElapsedInSeconds % 60);\n\n    if (seconds < 10) {\n      return `0${seconds}`;\n    }\n    return seconds;\n  };\n\n  renderMinutes = () => {\n    const { timeElapsedInSeconds } = this.state;\n    const minutes = Math.floor(timeElapsedInSeconds / 60);\n\n    if (minutes < 10) {\n      return `0${minutes}`;\n    }\n    return minutes;\n  };\n\n  renderHours = () => {\n    const { timeElapsedInSeconds } = this.state;\n    const minutes = Math.floor(timeElapsedInSeconds / 3600);\n\n    if (minutes < 10) {\n      return `0${minutes}`;\n    }\n    return minutes;\n  };\n\n  renderDays = () => {\n    const { timeElapsedInSeconds } = this.state;\n    const minutes = Math.floor(timeElapsedInSeconds / 86400);\n\n    if (minutes < 10) {\n      return `0${minutes}`;\n    }\n    return minutes;\n  };\n\n  render() {\n    const time = `${this.renderDays()}:${this.renderHours()}:${this.renderMinutes()}:${this.renderSeconds()}`;\n    return (\n      <div className=\"bg-container\">\n        <h1 className=\"main-head\">Stop Watch</h1>\n        <div className=\"card-container\">\n          <div className=\"display-container\">\n            <h1 className=\"timer\">{time}</h1>\n          </div>\n          <div className=\"button-container\">\n            <button className=\"button\" onClick={this.startTimer}>\n              Start\n            </button>\n            <button className=\"button\" onClick={this.pauseTimer}>\n              Pause\n            </button>\n            <button className=\"button\" onClick={this.resetTimer}>\n              Reset\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StopWatch;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}